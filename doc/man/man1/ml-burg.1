'\" t
.\"     Title: ml-burg
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.10
.\"      Date: 2020-04-02
.\"    Manual: \ \&
.\"    Source: SML/NJ
.\"  Language: English
.\"
.TH "ML\-BURG" "1" "2020-04-02" "SML/NJ" "\ \&"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
ml\-burg \- a tree parser generator for Standard ML
.SH "SYNOPSIS"
.sp
\fBml\-burg\fP \fIfile\fP
.SH "DESCRIPTION"
.sp
The \fBml\-burg\fP program generates a \fBStandard ML\fP program to perform
bottom\-up rewriting of an input tree. Cost information associated
with each rewrite rule is used to derive the minimum rewrite cost
for the entire tree. A successful reduction corresponds to rewriting
the input tree to a special non\-terminal symbol called the
\fIstart non\-terminal\fP. Upon successful reduction, facilities are
provided to walk the tree emitting semantic actions corresponding to
the rules that matched.
.SH "AUTHOR"
.sp
\fBML\-Burg\fP was written by Lal George and Florent Guillaume.
.SH "SEE\-ALSO"
.sp
sml(1)
.sp
\fIML\-Burg \(em Documentation\fP by Florent Guillaume and Lal George (included
in the \fBSML/NJ\fP documentation).
.SH "COPYING"
.sp
Copyright \(co 2020 The Fellowship of SML/NJ
.sp
This is free software; see the source for copying  conditions.   There  is  NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.